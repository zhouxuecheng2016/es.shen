1、document数据格式

面向文档的搜索分析引擎

（1）应用系统的数据结构都是面向对象的，复杂的
（2）对象数据存储到数据库中，只能拆解开来，变为扁平的多张表，每次查询的时候还得还原回对象格式，相当麻烦
（3）ES是面向文档的，文档中存储的数据结构，与面向对象的数据结构是一样的，基于这种文档数据结构，
     es可以提供复杂的索引，全文检索，分析聚合等功能
（4）es的document用json数据格式来表达

2、电商网站商品管理案例背景介绍

有一个电商网站，需要为其基于ES构建一个后台系统，提供以下功能：

（1）对商品信息进行CRUD（增删改查）操作
（2）执行简单的结构化查询
（3）可以执行简单的全文检索，以及复杂的phrase（短语）检索
（4）对于全文检索的结果，可以进行高亮显示
（5）对数据进行简单的聚合分析

3、简单的集群管理
(1)快速检查集群的健康状况
GET /_cat/health?v

epoch      timestamp cluster       status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent
1535323867 06:51:07  elasticsearch yellow          1         1      1   1    0    0        1             0                  -                 50.0%
green：每个索引的primary shard和replica shard都是active状态的
yellow：每个索引的primary shard都是active状态的，但是部分replica shard不是active状态，处于不可用的状态
red：不是所有索引的primary shard都是active状态的，部分索引有数据丢失了


(2)快速查看集群中有哪些索引
GET /_cat/indices?v

(3)简单的索引操作
创建索引：PUT /test_index?pretty
删除索引：DELETE /test_index?pretty

4、商品的CRUD操作

（1）新增商品：新增文档，建立索引
PUT /index/type/id
{
  "json数据"
}
（2）查询商品：检索文档

GET /index/type/id
GET /ecommerce/product/1
（3）修改商品：替换文档
PUT /ecommerce/product/1
{
    "name" : "jiaqiangban gaolujie yagao"
}
（4）修改商品：更新文档
POST /ecommerce/product/1/_update
{
  "doc": {
    "name": "jiaqiangban gaolujie yagao"
  }
}
（5）删除商品：删除文档
DELETE /ecommerce/product/1





